package ecellapp.sam10795.com.startuppo;import android.app.AlertDialog;import android.app.Dialog;import android.content.DialogInterface;import android.content.Intent;import android.content.SharedPreferences;import android.media.MediaPlayer;import android.os.Bundle;import android.support.v7.app.AppCompatActivity;import android.util.Log;import android.view.Menu;import android.view.MenuItem;import android.view.View;import android.view.animation.Animation;import android.view.animation.AnimationUtils;import android.widget.AdapterView;import android.widget.GridView;import android.widget.LinearLayout;import android.widget.TextView;import android.widget.Toast;import com.google.firebase.database.DataSnapshot;import com.google.firebase.database.DatabaseError;import com.google.firebase.database.DatabaseReference;import com.google.firebase.database.FirebaseDatabase;import com.google.firebase.database.ValueEventListener;import ecellapp.sam10795.com.startuppo.R;import java.util.Date;public class Mainu extends AppCompatActivity implements View.OnClickListener {    int box_limit;    SUPDataSource supDataSource;    DatabaseReference devdata;    DatabaseReference msgdata;    DatabaseReference towerdata;    boolean on = false;    MediaPlayer mediaPlayer;    TextView textView;    String message = "";    SharedPreferences sharedPreferences;    @Override    protected void onCreate(Bundle savedInstanceState) {        Log.i("Create","Mainu");        super.onCreate(savedInstanceState);        super.setTheme(R.style.AppTheme2);        sharedPreferences = getSharedPreferences("PKDT", MODE_PRIVATE);        on = true;//sharedPreferences.getBoolean("devon",false);        devdata = FirebaseDatabase.getInstance().getReference(getResources().getString(R.string.Device));        devdata.addValueEventListener(new ValueEventListener() {            @Override            public void onDataChange(DataSnapshot dataSnapshot) {                on = (Boolean)dataSnapshot.getValue();                sharedPreferences.edit().putBoolean("devon",on).apply();                Log.i("Bool","Change to "+on);            }            @Override            public void onCancelled(DatabaseError databaseError) {                Log.i("Data","error");            }        });        towerdata = FirebaseDatabase.getInstance().getReference(getResources().getString(R.string.Towers));        /*Tower alak = new Tower();        alak.setName("Alakananda");        alak.setCapHostel("");        alak.setCapUser("");        alak.setCapSUP("");        alak.setUserscore(0);        alak.setSUPLv(-1);        alak.setLat(12.9852674);        alak.setLon(80.2391345);        alak.setCapCount(0);        Tower bhadra = new Tower();        bhadra.setName("Bhadra");        bhadra.setCapHostel("");        bhadra.setCapUser("");        bhadra.setCapSUP("");        bhadra.setSUPLv(-1);        bhadra.setUserscore(0);        bhadra.setLat(12.986248);        bhadra.setLon(80.232455);        bhadra.setCapCount(0);        Tower brahms = new Tower();        brahms.setName("Brahmaputra");        brahms.setCapHostel("");        brahms.setCapUser("");        brahms.setSUPLv(-1);        brahms.setCapSUP("");        brahms.setUserscore(0);        brahms.setLat(12.9838560);        brahms.setLon(80.2347786);        brahms.setCapCount(0);        Tower cav = new Tower();        cav.setName("Cauvery");        cav.setCapHostel("");        cav.setCapUser("");        cav.setCapSUP("");        cav.setSUPLv(-1);        cav.setUserscore(0);        cav.setLat(12.9855026);        cav.setLon(80.2338077);        cav.setCapCount(0);        Tower ganga = new Tower();        ganga.setName("Ganga");        ganga.setCapHostel("");        ganga.setCapUser("");        ganga.setCapSUP("");        ganga.setSUPLv(-1);        ganga.setUserscore(0);        ganga.setLat(12.9872485);        ganga.setLon(80.2386088);        ganga.setCapCount(0);        Tower godav = new Tower();        godav.setName("Godavari");        godav.setCapHostel("");        godav.setCapUser("");        godav.setCapSUP("");        godav.setSUPLv(-1);        godav.setUserscore(0);        godav.setLat(12.9859887);        godav.setLon(80.2370799);        godav.setCapCount(0);        Tower jamuna = new Tower();        jamuna.setName("Jamuna");        jamuna.setCapHostel("");        jamuna.setCapUser("");        jamuna.setCapSUP("");        jamuna.setSUPLv(-1);        jamuna.setUserscore(0);        jamuna.setLat(12.9862083);        jamuna.setLon(80.2389253);        jamuna.setCapCount(0);        Tower krishna = new Tower();        krishna.setName("Krishna");        krishna.setCapHostel("");        krishna.setCapUser("");        krishna.setCapSUP("");        krishna.setSUPLv(-1);        krishna.setUserscore(0);        krishna.setLat(12.9842585);        krishna.setLon(80.2333409);        krishna.setCapCount(0);        Tower mandak = new Tower();        mandak.setName("Mandakini");        mandak.setCapHostel("");        mandak.setCapUser("");        mandak.setCapSUP("");        mandak.setSUPLv(-1);        mandak.setUserscore(0);        mandak.setLat(12.9867153);        mandak.setLon(80.2400572);        mandak.setCapCount(0);        Tower mahan = new Tower();        mahan.setName("Mahanadhi");        mahan.setCapHostel("");        mahan.setCapUser("");        mahan.setCapSUP("");        mahan.setSUPLv(-1);        mahan.setUserscore(0);        mahan.setLat(12.9879416);        mahan.setLon(80.2390574);        mahan.setCapCount(0);        Tower narmad = new Tower();        narmad.setName("Narmada");        narmad.setCapHostel("");        narmad.setCapUser("");        narmad.setSUPLv(-1);        narmad.setCapSUP("");        narmad.setUserscore(0);        narmad.setLat(12.985762);        narmad.setLon(80.235272);        narmad.setCapCount(0);        Tower pampa = new Tower();        pampa.setName("Pampa");        pampa.setCapHostel("");        pampa.setCapUser("");        pampa.setSUPLv(-1);        pampa.setCapSUP("");        pampa.setUserscore(0);        pampa.setLat(12.9877028);        pampa.setLon(80.2384588);        pampa.setCapCount(0);        Tower saras = new Tower();        saras.setName("Saraswathi");        saras.setCapHostel("");        saras.setCapUser("");        saras.setCapSUP("");        saras.setSUPLv(-1);        saras.setUserscore(0);        saras.setLat(12.9849067);        saras.setLon(80.2369137);        saras.setCapCount(0);        Tower sabar = new Tower();        sabar.setName("Sabarmati");        sabar.setCapHostel("");        sabar.setCapUser("");        sabar.setCapSUP("");        sabar.setSUPLv(-1);        sabar.setUserscore(0);        sabar.setLat(12.989491);        sabar.setLon(80.234649);        sabar.setCapCount(0);        Tower saru = new Tower();        saru.setName("Sarayu");        saru.setCapHostel("");        saru.setCapUser("");        saru.setCapSUP("");        saru.setSUPLv(-1);        saru.setUserscore(0);        saru.setLat(12.9909230);        saru.setLon(80.2347955);        saru.setCapCount(0);        Tower sharv = new Tower();        sharv.setName("Sharavathi");        sharv.setCapHostel("");        sharv.setCapUser("");        sharv.setCapSUP("");        sharv.setSUPLv(-1);        sharv.setUserscore(0);        sharv.setLat(12.9900684);        sharv.setLon(80.2345290);        sharv.setCapCount(0);        Tower sindhu = new Tower();        sindhu.setName("Sindhu");        sindhu.setCapHostel("");        sindhu.setCapUser("");        sindhu.setSUPLv(-1);        sindhu.setCapSUP("");        sindhu.setUserscore(0);        sindhu.setLat(12.9879224);        sindhu.setLon(80.2376496);        sindhu.setCapCount(0);        Tower tapti = new Tower();        tapti.setName("Tapti");        tapti.setCapHostel("");        tapti.setCapUser("");        tapti.setCapSUP("");        tapti.setSUPLv(-1);        tapti.setUserscore(0);        tapti.setLat(12.9846558);        tapti.setLon(80.2350790);        tapti.setCapCount(0);        Tower tambi = new Tower();        tambi.setName("Tamraparani");        tambi.setCapHostel("");        tambi.setCapUser("");        tambi.setCapSUP("");        tambi.setSUPLv(-1);        tambi.setUserscore(0);        tambi.setLat(12.9881573);        tambi.setLon(80.2385275);        tambi.setCapCount(0);        Tower tunga = new Tower();        tunga.setName("Tunga");        tunga.setCapHostel("");        tunga.setCapUser("");        tunga.setCapSUP("");        tunga.setSUPLv(-1);        tunga.setUserscore(0);        tunga.setLat(12.985473);        tunga.setLon(80.232359);        tunga.setCapCount(0);        towerdata.child(ganga.getName()).setValue(ganga);        towerdata.child(jamuna.getName()).setValue(jamuna);        towerdata.child(alak.getName()).setValue(alak);        towerdata.child(bhadra.getName()).setValue(bhadra);        towerdata.child(brahms.getName()).setValue(brahms);        towerdata.child(cav.getName()).setValue(cav);        towerdata.child(godav.getName()).setValue(godav);        towerdata.child(mahan.getName()).setValue(mahan);        towerdata.child(mandak.getName()).setValue(mandak);        towerdata.child(krishna.getName()).setValue(krishna);        towerdata.child(narmad.getName()).setValue(narmad);        towerdata.child(pampa.getName()).setValue(pampa);        towerdata.child(sabar.getName()).setValue(sabar);        towerdata.child(saras.getName()).setValue(saras);        towerdata.child(saru.getName()).setValue(saru);        towerdata.child(sharv.getName()).setValue(sharv);        towerdata.child(sindhu.getName()).setValue(sindhu);        towerdata.child(tambi.getName()).setValue(tambi);        towerdata.child(tapti.getName()).setValue(tapti);        towerdata.child(tunga.getName()).setValue(tunga);        */        Log.i("Towers","Added");        long d = new Date().getTime();        /*if((d-p)>(6*3600000))        {            int count = (int)((d-p)/(6*3600000));            Toast.makeText(this,"You have more Pokeballs now",Toast.LENGTH_SHORT).show();            sharedPreferences.edit().putInt("PBall",sharedPreferences.getInt("PBall",5)+(5*count)).apply();            sharedPreferences.edit().putLong("LastPDate",(p+(6*3600000*count))).apply();        }        if((d-g)>(24*3600000))        {            int count = (int)((d-g)/(24*3600000));            Toast.makeText(this,"You have more Great balls now",Toast.LENGTH_SHORT).show();            sharedPreferences.edit().putInt("GBall",sharedPreferences.getInt("GBall",5)+(5*count)).apply();            sharedPreferences.edit().putLong("LastGDate",(g+(24*3600000*count))).apply();        }        if((d-u)>(72*3600000))        {            int count = (int)((d-u)/(72*3600000));            Toast.makeText(this,"You have more Ultra balls now",Toast.LENGTH_SHORT).show();            sharedPreferences.edit().putInt("UBall",sharedPreferences.getInt("UBall",5)+(5*count)).apply();            sharedPreferences.edit().putLong("LastUDate",(u+(72*3600000*count))).apply();        }        if((d-m)>(168*3600000))        {            int count = (int)((d-m)/(168*3600000));            Toast.makeText(this,"You have more Master balls now",Toast.LENGTH_SHORT).show();            sharedPreferences.edit().putInt("MBall",sharedPreferences.getInt("MBall",1)+count).apply();            sharedPreferences.edit().putLong("LastMDate",(m+(168*3600000*count))).apply();        }*/        setContentView(R.layout.activity_mainu);        textView = (TextView)findViewById(R.id.msgview);        msgdata = FirebaseDatabase.getInstance().getReference(getResources().getString(R.string.MSG));        msgdata.addValueEventListener(new ValueEventListener() {            @Override            public void onDataChange(DataSnapshot dataSnapshot) {                message = (String)dataSnapshot.getValue();                if(message.length()>2)                {                    textView.setVisibility(View.VISIBLE);                    textView.setText(message);                }                else {                    textView.setVisibility(View.GONE);                }            }            @Override            public void onCancelled(DatabaseError databaseError) {                textView.setVisibility(View.GONE);            }        });        Animation animfromleft = AnimationUtils.loadAnimation(this,R.anim.slide_left);        Animation animfromright = AnimationUtils.loadAnimation(this,R.anim.slide_right);        LinearLayout l1 = (LinearLayout)findViewById(R.id.CMODE);        l1.setOnClickListener(this);        l1.startAnimation(animfromright);        LinearLayout l2 = (LinearLayout)findViewById(R.id.MPKMN);        l2.setOnClickListener(this);        l2.startAnimation(animfromleft);        LinearLayout l3 = (LinearLayout)findViewById(R.id.MPROF);        l3.setOnClickListener(this);        l3.startAnimation(animfromright);        LinearLayout l4 = (LinearLayout)findViewById(R.id.PKBUY);        l4.setOnClickListener(this);        l4.startAnimation(animfromright);        LinearLayout l5 = (LinearLayout)findViewById(R.id.CPRAC);        l5.setOnClickListener(this);        l5.startAnimation(animfromleft);        LinearLayout l6 = (LinearLayout)findViewById(R.id.PKBAT);        l6.setOnClickListener(this);        l6.startAnimation(animfromleft);        box_limit = sharedPreferences.getInt("BOX_LIMIT",51);        supDataSource = new SUPDataSource(this);        supDataSource.open();        if(supDataSource.getAllSUP().size()>=box_limit)        {            Dialog dialog = new Dialog(Mainu.this);            dialog.setContentView(R.layout.activity_mypkmn);            dialog.setTitle("Box limit exceeded. Remove Pokemon to proceed");            GridView gridView = (GridView)dialog.findViewById(R.id.gridView);            gridView.setAdapter(new SUPAdapter(Mainu.this,supDataSource.getAllSUP()));            gridView.setOnItemClickListener(new AdapterView.OnItemClickListener() {                @Override                public void onItemClick(AdapterView<?> parent, View view, int position, long id) {                    final SUP pokemon = (SUP)parent.getItemAtPosition(position);                    new AlertDialog.Builder(Mainu.this)                            .setTitle("Release this Pokemon?")                            .setMessage(pokemon.getName() + " at level " + pokemon.getLv() + "will be released")                            .setPositiveButton("Release", new DialogInterface.OnClickListener() {                                @Override                                public void onClick(DialogInterface dialog, int which) {                                    supDataSource.releaseSUP(pokemon);                                    Toast.makeText(Mainu.this, pokemon.getName()+" was released",Toast.LENGTH_SHORT).show();                                    if(supDataSource.getAllSUP().size()<box_limit) {                                        supDataSource.close();                                        recreate();                                    }                                    else                                    {                                        supDataSource.close();                                        dialog.dismiss();                                    }                                }                            })                            .setNegativeButton("Cancel", new DialogInterface.OnClickListener() {                                @Override                                public void onClick(DialogInterface dialog, int which) {                                    dialog.dismiss();                                }                            })                            .setCancelable(false)                            .show();                }            });            dialog.setCancelable(false);            dialog.show();        }    }    @Override    public void onClick(View v) {        int id = v.getId();        Intent intent;        mediaPlayer.stop();            switch(id) {                case R.id.CMODE: {                    if(on){                    intent = new Intent(Mainu.this, MainActivity.class);                    startActivity(intent);                    }                    else                    {                        Toast.makeText(this,"Feature is disabled until game starts",Toast.LENGTH_SHORT).show();                    }                    break;                }                case R.id.CPRAC: {                    intent = new Intent(Mainu.this, CatchActivity.class);                    startActivity(intent);                    break;                }                case R.id.MPROF: {                    intent = new Intent(Mainu.this, Profile.class);                    startActivity(intent);                    break;                }                case R.id.MPKMN: {                    if(on) {                        intent = new Intent(Mainu.this, mypkmn.class);                        startActivity(intent);                    }                    else                    {                        Toast.makeText(this,"Feature is disabled until game starts",Toast.LENGTH_SHORT).show();                    }                    break;                }                case R.id.PKBUY: {                    if(on) {                        intent = new Intent(Mainu.this, BluetoothChatFragment.class);                        startActivity(intent);                    }                    else                    {                        Toast.makeText(this,"Feature is disabled until game starts",Toast.LENGTH_SHORT).show();                    }                    break;                }                case R.id.PKBAT: {                    intent = new Intent(Mainu.this, TopList.class);                    startActivity(intent);                    break;                }                default: {                    break;                }            }    }    @Override    public boolean onCreateOptionsMenu(Menu menu) {        // Inflate the menu; this adds items to the action bar if it is present.        getMenuInflater().inflate(R.menu.menu_mainu, menu);        return true;    }    @Override    public boolean onOptionsItemSelected(MenuItem item) {        // Handle action bar item clicks here. The action bar will        // automatically handle clicks on the Home/Up button, so long        // as you specify a parent activity in AndroidManifest.xml.        int id = item.getItemId();        //noinspection SimplifiableIfStatement        if (id == R.id.action_about) {            Dialog dialog = new Dialog(this);            dialog.setContentView(R.layout.about_credits);            dialog.setTitle("About");            dialog.show();        }        if(id == R.id.action_howto)        {Dialog dialog = new Dialog(this);            dialog.setContentView(R.layout.howto);            dialog.setTitle("Instructions");            dialog.show();        }        return super.onOptionsItemSelected(item);    }    @Override    protected void onPause() {        super.onPause();        mediaPlayer.stop();    }    @Override    protected void onResume() {        super.onResume();    }    @Override    protected void onStart() {        super.onStart();        mediaPlayer = MediaPlayer.create(this,R.raw.other);        mediaPlayer.start();        mediaPlayer.setLooping(true);    }}