package ecellapp.sam10795.com.startuppo;import android.app.Activity;import android.app.AlertDialog;import android.app.Dialog;import android.content.DialogInterface;import android.content.Intent;import android.content.SharedPreferences;import android.graphics.Point;import android.media.MediaPlayer;import android.os.Bundle;import android.os.Handler;import android.support.design.widget.CoordinatorLayout;import android.support.design.widget.FloatingActionButton;import android.support.design.widget.Snackbar;import android.support.v4.content.ContextCompat;import android.support.v4.view.GestureDetectorCompat;import android.support.v7.app.ActionBar;import android.support.v7.app.AppCompatActivity;import android.telephony.TelephonyManager;import android.util.DisplayMetrics;import android.util.Log;import android.util.Size;import android.view.Display;import android.view.GestureDetector;import android.view.MotionEvent;import android.view.View;import android.view.ViewConfiguration;import android.widget.AdapterView;import android.widget.Button;import android.widget.EditText;import android.widget.FrameLayout;import android.widget.GridView;import android.widget.ImageView;import android.widget.LinearLayout;import android.widget.TextView;import android.widget.Toast;import com.getbase.floatingactionbutton.FloatingActionsMenu;import com.opencsv.CSVReader;import ecellapp.sam10795.com.startuppo.R;import java.io.BufferedReader;import java.io.IOException;import java.io.InputStream;import java.io.InputStreamReader;import java.util.ArrayList;import java.util.Date;import java.util.List;import java.util.Random;import java.util.StringTokenizer;public class CatchActivity extends Activity implements GestureDetector.OnGestureListener {    FrameLayout frameLayout;    boolean caught;    boolean touch = true;    boolean catcher = false;    boolean catchmode = false;    static int catchcount = 0;    int velthreshy=0;    ImageView cashbag,startup,info;    private GestureDetectorCompat gestureDetectorCompat;    SharedPreferences sharedPreferences;    SharedPreferences.Editor editor;    FloatingActionsMenu floatingActionsMenu;    int ball = 0;    int cbc,gbc,ubc,mbc;    int box_limit;    SUP s;    int drawable = 0;    double accel = 20.0;    List<String[]> records;    MediaPlayer mediaPlayer;    Utilities utilities;    float ymax;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_catch);        sharedPreferences = getSharedPreferences("PKDT", MODE_PRIVATE);        box_limit = sharedPreferences.getInt("BOX_LIMIT",51);        frameLayout = (FrameLayout)findViewById(R.id.frame);        cashbag = (ImageView)findViewById(R.id.cashbag);        cashbag.setVisibility(View.INVISIBLE);        startup = (ImageView)findViewById(R.id.startup);        info = (ImageView)findViewById(R.id.cinfo);        utilities = new Utilities();        info.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                Dialog dialog = new Dialog(CatchActivity.this);                dialog.setContentView(R.layout.catch_tut);                dialog.setTitle("Instructions");                dialog.show();            }        });        cbc = sharedPreferences.getInt("PBall", 0);        gbc = sharedPreferences.getInt("GBall", 0);        ubc = sharedPreferences.getInt("UBall", 0);        mbc = sharedPreferences.getInt("MBall", 0);        floatingActionsMenu = (FloatingActionsMenu)findViewById(R.id.fab_labels);        com.getbase.floatingactionbutton.FloatingActionButton pball = (com.getbase.floatingactionbutton.FloatingActionButton)findViewById(R.id.c_bag);        com.getbase.floatingactionbutton.FloatingActionButton gball = (com.getbase.floatingactionbutton.FloatingActionButton)findViewById(R.id.g_bag);        com.getbase.floatingactionbutton.FloatingActionButton uball = (com.getbase.floatingactionbutton.FloatingActionButton)findViewById(R.id.u_bag);        com.getbase.floatingactionbutton.FloatingActionButton mball = (com.getbase.floatingactionbutton.FloatingActionButton)findViewById(R.id.m_bag);        /*floatingActionsMenu.addButton(pball);        floatingActionsMenu.addButton(gball);        floatingActionsMenu.addButton(uball);        floatingActionsMenu.addButton(mball);*/        int pview = cbc>0?View.VISIBLE:View.GONE;        int gview = gbc>0?View.VISIBLE:View.GONE;        int uview = ubc>0?View.VISIBLE:View.GONE;        int mview = mbc>0?View.VISIBLE:View.GONE;        pball.setVisibility(pview);        gball.setVisibility(gview);        uball.setVisibility(uview);        mball.setVisibility(mview);        pball.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                cashbag.setVisibility(View.VISIBLE);                cashbag.setImageResource(R.drawable.cbag);                drawable = R.drawable.cbag;                floatingActionsMenu.collapse();                ball = 0;                //floatingActionsMenu.setVisibility(View.GONE);                catcher = true;            }        });        gball.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                cashbag.setVisibility(View.VISIBLE);                cashbag.setImageResource(R.drawable.gbag);                drawable = R.drawable.gbag;                floatingActionsMenu.collapse();                ball = 1;                //floatingActionsMenu.setVisibility(View.GONE);                catcher = true;            }        });        uball.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                cashbag.setVisibility(View.VISIBLE);                cashbag.setImageResource(R.drawable.ubag);                drawable = R.drawable.ubag;                floatingActionsMenu.collapse();                ball =2;                //floatingActionsMenu.setVisibility(View.GONE);                catcher = true;            }        });        mball.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                cashbag.setVisibility(View.VISIBLE);                cashbag.setImageResource(R.drawable.mbag);                drawable = R.drawable.mbag;                floatingActionsMenu.collapse();                ball =3;                //floatingActionsMenu.setVisibility(View.GONE);                catcher = true;            }        });        s = new SUP();        gestureDetectorCompat = new GestureDetectorCompat(this,this);        Intent intent = getIntent();        if(intent.hasExtra("Name")&&intent.hasExtra("Lv")&&intent.hasExtra("Zone")) {            String name = intent.getStringExtra("Name");            int drid = getResources().getIdentifier(utilities.formatname(name),"drawable",getPackageName());            s.setLv(intent.getIntExtra("Lv", 5));            s.setName(name);            s.setTraded(false);            records = utilities.getRecords(this);            for(String record[] : records)            {                if(utilities.formatname(record[0]).equalsIgnoreCase(utilities.formatname(name)))                {                    s.setName(record[0]);                    s.setEvaluation(record[3]);                    s.setFunding(record[6]);                    s.setInfo(record[4]);                    s.setFoundate(record[2]);                    s.setFounders(record[5]);                    s.setType(record[1]);                    s.setLegend(record[7].equalsIgnoreCase("1"));                }            }            if(s.isLegend())            {                Toast.makeText(this,"This startup is Legendary. Good luck!",Toast.LENGTH_SHORT).show();                velthreshy = -75;            }            startup.setImageResource(drid);        }        else        {            if(sharedPreferences.getBoolean("C1",true))            {                Dialog dialog = new Dialog(CatchActivity.this);                dialog.setContentView(R.layout.catch_tut);                dialog.setTitle("Instructions");                dialog.show();                sharedPreferences.edit().putBoolean("C1",false).apply();            }            catchmode = true;            s.setName("hike");            s.setLv(25);            startup.setImageResource(R.drawable.hike);            cashbag.setImageResource(R.drawable.cbag);            gball.setVisibility(View.GONE);            uball.setVisibility(View.GONE);            mball.setVisibility(View.GONE);            pball.setVisibility(View.VISIBLE);        }        Point p = new Point();        Display display = getWindowManager().getDefaultDisplay();        display.getSize(p);        DisplayMetrics dm = new DisplayMetrics();        display.getMetrics(dm);        ymax = Math.max(p.x,p.y);        //720x1184 is size        Random random = new Random();        int top = random.nextInt(150);        FrameLayout.LayoutParams layoutParams = (FrameLayout.LayoutParams)startup.getLayoutParams();        layoutParams.setMargins(0,top,0,0);        startup.setLayoutParams(layoutParams);    }    @Override    public boolean onTouchEvent(MotionEvent event) {        return super.onTouchEvent(event);    }    @Override    public boolean onDown(MotionEvent e) {        return false;    }    @Override    public void onShowPress(MotionEvent e) {    }    @Override    public boolean onSingleTapUp(MotionEvent e) {        return false;    }    @Override    public boolean onScroll(MotionEvent e1, MotionEvent e2, float distanceX, float distanceY) {        return false;    }    @Override    public void onLongPress(MotionEvent e) {    }    @Override    public boolean onFling(MotionEvent e1, MotionEvent e2, float velocityX, float velocityY) {        if(!catchmode&&touch) {            touch = false;            catchcount+=1;            if (startup.getVisibility() == View.VISIBLE && catcher) {                floatingActionsMenu.setVisibility(View.INVISIBLE);                editor = sharedPreferences.edit();                Log.i("Catch","A");                switch (ball)                {                    case 0:                    {                        velthreshy+=100;                        editor.putInt("PBall",cbc-1);                        break;                    }                    case 1:                    {                        velthreshy+=150;                        editor.putInt("GBall",gbc-1);                        break;                    }                    case 2:                    {                        velthreshy+=200;                        editor.putInt("UBall",ubc-1);                        break;                    }                    case 3:                    {                        velthreshy+=500;                        editor.putInt("MBall",mbc-1);                        break;                    }                }                s.setBag(ball);                editor.apply();                float vy = velocityY/ ViewConfiguration.get(CatchActivity.this).getScaledMaximumFlingVelocity();                float y2 = startup.getY();                float x1 = cashbag.getX();                float y1 = cashbag.getY();                cashbag.setVisibility(View.GONE);                Log.i("Catch","B");                double vyp = getperfectvy(y1,y2);                caught = true;//TODO: inbounds(vy,vyp);                //if(e1.getX()<x1||e1.getX()>x1+cashbag.getWidth() && e1.getY()<y1||e1.getY()>y1+cashbag.getHeight())                //{                    Log.i("Catch","C");                    if(caught)                    {                        frameLayout.addView(new Throdraw(this,drawable,x1,ymax-y1,0,vyp,60*accel,ymax),2);                    }                    else                    {                        frameLayout.addView(new Throdraw(this,drawable,x1,ymax-y1,0,-3000*vy,60*accel,ymax),2);                    }                    final Handler handler = new Handler();                    handler.postDelayed(new Runnable() {                        @Override                        public void run() {                            floatingActionsMenu.setVisibility(View.VISIBLE);                            frameLayout.removeViewAt(2);                            touch = true;                            if (caught) {                                try {                                    final SUPDataSource supDataSource = new SUPDataSource(CatchActivity.this);                                    supDataSource.open();                                    Toast.makeText(CatchActivity.this, s.getName() + " was caught!", Toast.LENGTH_SHORT).show();                                    Dialog dialog = new Dialog(CatchActivity.this);                                    dialog.setContentView(R.layout.dialog_sup);                                    LinearLayout dilayout = (LinearLayout) dialog.findViewById(R.id.dilayout);                                    switch (s.getBag())                                    {                                        case 0:                                            dilayout.setBackgroundColor(ContextCompat.getColor(CatchActivity.this,R.color.white));                                            break;                                        case 1:                                            dilayout.setBackgroundColor(ContextCompat.getColor(CatchActivity.this,R.color.blue));                                            break;                                        case 2:                                            dilayout.setBackgroundColor(ContextCompat.getColor(CatchActivity.this,R.color.yellow));                                            break;                                        case 3:                                            dilayout.setBackgroundColor(ContextCompat.getColor(CatchActivity.this,R.color.purple));                                            break;                                    }                                    ImageView imageView = (ImageView)dialog.findViewById(R.id.sup);                                    int imgid = getResources().getIdentifier(utilities.formatname(s.getName()),"drawable",getPackageName());                                    imageView.setImageResource(imgid);                                    TextView type,level,founders,funding,foundate,cureval,info;                                    type = (TextView)dialog.findViewById(R.id.type);                                    type.setVisibility(s.getType().isEmpty()?View.INVISIBLE:View.VISIBLE);                                    type.setText("Type: "+s.getType());                                    level = (TextView)dialog.findViewById(R.id.level);                                    level.setText("Level: "+Integer.toString(s.getLv()));                                    founders = (TextView)dialog.findViewById(R.id.foundr);                                    founders.setVisibility(s.getFounders().isEmpty()?View.INVISIBLE:View.VISIBLE);                                    founders.setText("Founded by "+s.getFounders());                                    funding = (TextView)dialog.findViewById(R.id.funds);                                    funding.setVisibility(s.getFunding().isEmpty()?View.INVISIBLE:View.VISIBLE);                                    funding.setText("Fundings: "+s.getFunding());                                    foundate = (TextView)dialog.findViewById(R.id.fundt);                                    foundate.setVisibility(s.getFoundate().isEmpty()?View.INVISIBLE:View.VISIBLE);                                    foundate.setText("Founded on: "+s.getFoundate());                                    TextView legend = (TextView)dialog.findViewById(R.id.legend);                                    cureval = (TextView)dialog.findViewById(R.id.eval);                                    cureval.setVisibility(s.getEvaluation().isEmpty()?View.INVISIBLE:View.VISIBLE);                                    cureval.setText("Current Valuation: "+s.getEvaluation());                                    info = (TextView)dialog.findViewById(R.id.info);                                    info.setVisibility(s.getInfo().isEmpty()?View.INVISIBLE:View.VISIBLE);                                    info.setText(s.getInfo());                                    legend.setVisibility(s.isLegend()?View.VISIBLE:View.GONE);                                    legend.setText("Legendary Startup");                                    LinearLayout lout = (LinearLayout)dialog.findViewById(R.id.btlay);                                    lout.setVisibility(View.GONE);                                    Button button = (Button)dialog.findViewById(R.id.button);                                    button.setVisibility(View.VISIBLE);                                    button.setOnClickListener(new View.OnClickListener() {                                        @Override                                        public void onClick(View v) {                                            supDataSource.createSUP(s);                                            if(supDataSource.getAllSUP().size()<box_limit) {                                                supDataSource.close();                                                utilities.updatescore(CatchActivity.this);                                                mediaPlayer.stop();                                                Intent intent = new Intent(CatchActivity.this, MainActivity.class);                                                startActivity(intent);                                                finish();                                            }                                            else                                            {                                                Dialog dialog2 = new Dialog(CatchActivity.this);                                                dialog2.setContentView(R.layout.activity_mypkmn);                                                dialog2.setTitle("Box limit exceeded. Remove Pokemon to proceed");                                                GridView gridView = (GridView)dialog2.findViewById(R.id.gridView);                                                gridView.setAdapter(new SUPAdapter(CatchActivity.this,supDataSource.getAllSUP()));                                                gridView.setOnItemClickListener(new AdapterView.OnItemClickListener() {                                                    @Override                                                    public void onItemClick(AdapterView<?> parent, View view, int position, long id) {                                                        final SUP stup = (SUP)parent.getItemAtPosition(position);                                                        new AlertDialog.Builder(CatchActivity.this)                                                                .setTitle("Release this Pokemon?")                                                                .setMessage(stup.getName() + " at level " + stup.getLv() + "will be released")                                                                .setPositiveButton("Release", new DialogInterface.OnClickListener() {                                                                    @Override                                                                    public void onClick(DialogInterface dialog, int which) {                                                                        supDataSource.releaseSUP(stup);                                                                        Toast.makeText(CatchActivity.this, stup.getName()+" was released",Toast.LENGTH_SHORT).show();                                                                        if(supDataSource.getAllSUP().size()<box_limit) {                                                                            mediaPlayer.stop();                                                                            Intent intent = new Intent(CatchActivity.this, MainActivity.class);                                                                            startActivity(intent);                                                                            finish();                                                                        }                                                                        else                                                                        {                                                                            dialog.dismiss();                                                                        }                                                                    }                                                                })                                                                .setNegativeButton("Cancel", new DialogInterface.OnClickListener() {                                                                    @Override                                                                    public void onClick(DialogInterface dialog, int which) {                                                                        dialog.cancel();                                                                    }                                                                })                                                                .setCancelable(false)                                                                .show();                                                    }                                                });                                                dialog2.setCancelable(false);                                                dialog2.show();                                                dialog2.getWindow().setLayout(ActionBar.LayoutParams.WRAP_CONTENT, ActionBar.LayoutParams.WRAP_CONTENT);                                            }                                        }                                    });                                    if(!CatchActivity.this.isFinishing()) {                                        dialog.show();                                        dialog.setCancelable(false);                                    }                                } catch (Exception e) {                                    e.printStackTrace();                                }                            } else {                                if(catchcount<3) {                                    touch = true;                                    Toast.makeText(CatchActivity.this, "Oh no! Your aim missed. Try again! ", Toast.LENGTH_SHORT).show();                                    cbc = sharedPreferences.getInt("PBall", 0);                                    gbc = sharedPreferences.getInt("GBall", 0);                                    ubc = sharedPreferences.getInt("UBall", 0);                                    mbc = sharedPreferences.getInt("MBall", 0);                                    if(cbc+gbc+mbc+ubc==0)                                    {                                        Toast.makeText(CatchActivity.this, "You have run out of cash", Toast.LENGTH_SHORT).show();                                        Intent intent = new Intent(CatchActivity.this, MainActivity.class);                                        mediaPlayer.stop();                                        startActivity(intent);                                        finish();                                    }                                    floatingActionsMenu.setVisibility(View.VISIBLE);                                }                                else {                                    Toast.makeText(CatchActivity.this, s.getName() + " escaped!", Toast.LENGTH_SHORT).show();                                    Intent intent = new Intent(CatchActivity.this, MainActivity.class);                                    mediaPlayer.stop();                                    startActivity(intent);                                    finish();                                }                            }                        }                    }, 1500);                //}                Log.i("Catch","D");                catcher = false;                return true;            } else {                return false;            }        }        else        {            if(catcher&&touch) {                floatingActionsMenu.setVisibility(View.INVISIBLE);                touch = false;                float x1 = cashbag.getX();                float y1 = cashbag.getY();                float y2 = startup.getY();                float vy = velocityY/ ViewConfiguration.get(CatchActivity.this).getScaledMaximumFlingVelocity();                cashbag.setVisibility(View.GONE);                velthreshy = 200;                double vyp = getperfectvy(y1,y2);                caught = inbounds(vy,vyp);                if(caught)                {                    frameLayout.addView(new Throdraw(this,drawable,x1,ymax-y1,0,vyp,60*accel,ymax),2);                }                else                {                    frameLayout.addView(new Throdraw(this,drawable,x1,ymax-y1,0,-3000*vy,60*accel,ymax),2);                }                final Handler handler = new Handler();                handler.postDelayed(new Runnable() {                    @Override                    public void run() {                        touch= true;                        floatingActionsMenu.setVisibility(View.VISIBLE);                        frameLayout.removeViewAt(2);                        if (caught) {                            try {                                Toast.makeText(CatchActivity.this, s.getName() + " was caught!", Toast.LENGTH_SHORT).show();                            } catch (Exception e) {                                e.printStackTrace();                            }                        } else {                            Toast.makeText(CatchActivity.this, s.getName() + " escaped!", Toast.LENGTH_SHORT).show();                        }                        Random random = new Random();                        int top = random.nextInt(200);                        FrameLayout.LayoutParams layoutParams = (FrameLayout.LayoutParams)startup.getLayoutParams();                        layoutParams.setMargins(0,top,0,0);                        startup.setLayoutParams(layoutParams);                    }                }, 1500);                catcher = false;                return true;            } else {                return false;            }        }    }    @Override    public boolean dispatchTouchEvent(MotionEvent ev)    {        super.dispatchTouchEvent(ev);        return gestureDetectorCompat.onTouchEvent(ev);    }    @Override    public void onBackPressed() {        mediaPlayer.stop();        finish();        super.onBackPressed();    }    private boolean inbounds(double vy, double vyp)    {        Log.i("Thresholds",-3000*vy+","+vyp+","+velthreshy);        return Math.abs(-3000*vy-vyp)<=velthreshy;    }    private double getperfectvy(float y1, float y2)    {        float yi = ymax - y1;        float yf = ymax - y2;        return (yf-yi + 0.5*60*accel*1)/(Math.sin(Math.PI/3)*1);    }    @Override    protected void onPause() {        super.onPause();        mediaPlayer.stop();    }    @Override    protected void onResume() {        super.onResume();    }    @Override    protected void onStart() {        super.onStart();        mediaPlayer = MediaPlayer.create(this,R.raw.catchr);        mediaPlayer.start();        mediaPlayer.setLooping(true);    }}