package ecellapp.sam10795.com.startuppo;import android.app.AlertDialog;import android.app.Dialog;import android.content.DialogInterface;import android.content.Intent;import android.content.SharedPreferences;import android.support.v4.content.ContextCompat;import android.support.v7.app.ActionBar;import android.os.Bundle;import android.support.v7.app.AppCompatActivity;import android.util.Log;import android.view.Menu;import android.view.MenuItem;import android.view.View;import android.widget.AdapterView;import android.widget.Button;import android.widget.GridView;import android.widget.ImageView;import android.widget.LinearLayout;import android.widget.ListView;import android.widget.TextView;import android.widget.Toast;import com.opencsv.CSVReader;import ecellapp.sam10795.com.startuppo.R;import java.io.BufferedReader;import java.io.IOException;import java.io.InputStream;import java.io.InputStreamReader;import java.text.DateFormat;import java.util.ArrayList;import java.util.List;import java.util.StringTokenizer;import pl.droidsonroids.gif.GifDrawable;public class mypkmn extends AppCompatActivity {    SUPDataSource supDataSource;    SUPAdapter supadapter;    SUP Sup;    ArrayList<SUP> sups = new ArrayList<>();    private int REQ_CODE = 1;    SharedPreferences sp;    SharedPreferences.Editor ed;    Dialog dialog;    int lvup;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_mypkmn);        supDataSource = new SUPDataSource(this);        supDataSource.open();        sups = supDataSource.getAllSUP();        sp = getSharedPreferences("PKMN",MODE_PRIVATE);        if(!sups.isEmpty()) {            supadapter = new SUPAdapter(this, sups);            GridView gridView = (GridView) findViewById(R.id.gridView);            gridView.setAdapter(supadapter);            gridView.setOnItemClickListener(new AdapterView.OnItemClickListener() {                @Override                public void onItemClick(AdapterView<?> parent, View view, int position, long id) {                    final SUP sup = (SUP)parent.getItemAtPosition(position);                    final int pos = position;                    Sup = sup;                    dialog = new Dialog(mypkmn.this);                    dialog.setContentView(R.layout.dialog_sup);                    LinearLayout dilayout = (LinearLayout) dialog.findViewById(R.id.dilayout);                    switch (sup.getBag())                    {                        case 0:                            dilayout.setBackgroundColor(ContextCompat.getColor(mypkmn.this,R.color.white));                            break;                        case 1:                            dilayout.setBackgroundColor(ContextCompat.getColor(mypkmn.this,R.color.blue));                            break;                        case 2:                            dilayout.setBackgroundColor(ContextCompat.getColor(mypkmn.this,R.color.yellow));                            break;                        case 3:                            dilayout.setBackgroundColor(ContextCompat.getColor(mypkmn.this,R.color.purple));                            break;                    }                    ImageView imageView = (ImageView)dialog.findViewById(R.id.sup);                    int imgid = getResources().getIdentifier(formatname(sup.getName()).toLowerCase(),"drawable",getPackageName());                    imageView.setImageResource(imgid);                    dialog.setTitle(sup.getName());                    TextView type,level,founders,funding,foundate,cureval,info;                    type = (TextView)dialog.findViewById(R.id.type);                    type.setVisibility(sup.getType().isEmpty()?View.INVISIBLE:View.VISIBLE);                    type.setText("Type: "+sup.getType());                    level = (TextView)dialog.findViewById(R.id.level);                    level.setText("Level: "+Integer.toString(sup.getLv()));                    founders = (TextView)dialog.findViewById(R.id.foundr);                    founders.setVisibility(sup.getFounders().isEmpty()?View.INVISIBLE:View.VISIBLE);                    founders.setText("Founded by "+sup.getFounders());                    funding = (TextView)dialog.findViewById(R.id.funds);                    funding.setVisibility(sup.getFunding().isEmpty()?View.INVISIBLE:View.VISIBLE);                    funding.setText("Fundings: "+sup.getFunding());                    foundate = (TextView)dialog.findViewById(R.id.fundt);                    foundate.setVisibility(sup.getFoundate().isEmpty()?View.INVISIBLE:View.VISIBLE);                    foundate.setText("Founded on: "+sup.getFoundate());                    TextView legend = (TextView)dialog.findViewById(R.id.legend);                    cureval = (TextView)dialog.findViewById(R.id.eval);                    cureval.setVisibility(sup.getEvaluation().isEmpty()?View.INVISIBLE:View.VISIBLE);                    cureval.setText("Valuation: "+sup.getEvaluation());                    info = (TextView)dialog.findViewById(R.id.info);                    info.setVisibility(sup.getInfo().isEmpty()?View.INVISIBLE:View.VISIBLE);                    info.setText(sup.getInfo());                    legend.setVisibility(sup.isLegend()?View.VISIBLE:View.GONE);                    legend.setText("Legendary Pokemon");                    Button lvlup = (Button)dialog.findViewById(R.id.lvlup);                    lvlup.setVisibility(sup.getLv()<100?View.VISIBLE:View.GONE);                    lvlup.setOnClickListener(new View.OnClickListener() {                        @Override                        public void onClick(View v) {                            lvup = Sup.isTraded()?((9*sup.getLv())/10):sup.getLv();                            lvup = Sup.isLegend()?((11*lvup)/10):lvup;                            Intent intent = new Intent(mypkmn.this,LVTap.class);                            intent.putExtra("Pokemon",sup.getName());                            intent.putExtra("Level",lvup);                            startActivityForResult(intent,REQ_CODE);                            mypkmn.this.dialog.dismiss();                        }                    });                    Button release = (Button)dialog.findViewById(R.id.release);                    release.setOnClickListener(new View.OnClickListener() {                        @Override                        public void onClick(View v) {                            new AlertDialog.Builder(mypkmn.this)                                    .setTitle("Release this Pokemon?")                                    .setMessage(sup.getName() + " at level " + sup.getLv() + "will be released")                                    .setPositiveButton("Release", new DialogInterface.OnClickListener() {                                        @Override                                        public void onClick(DialogInterface dialog, int which) {                                            supDataSource.releaseSUP(sup);                                            sups.remove(pos);                                            new Utilities().updatescore(mypkmn.this);                                            supadapter.notifyDataSetChanged();                                            mypkmn.this.dialog.dismiss();                                            Toast.makeText(mypkmn.this, sup.getName()+" was released",Toast.LENGTH_SHORT).show();                                        }                                    })                                    .setNegativeButton("Cancel", new DialogInterface.OnClickListener() {                                        @Override                                        public void onClick(DialogInterface dialog, int which) {                                            dialog.cancel();                                        }                                    })                                    .show();                        }                    });                    dialog.show();                    dialog.getWindow().setLayout(ActionBar.LayoutParams.WRAP_CONTENT, ActionBar.LayoutParams.WRAP_CONTENT);                }            });        }    }    @Override    public boolean onCreateOptionsMenu(Menu menu) {        // Inflate the menu; this adds items to the action bar if it is present.        getMenuInflater().inflate(R.menu.menu_mypkmn, menu);        return true;    }    @Override    public boolean onOptionsItemSelected(MenuItem item) {        // Handle action bar item clicks here. The action bar will        // automatically handle clicks on the Home/Up button, so long        // as you specify a parent activity in AndroidManifest.xml.        int id = item.getItemId();        //noinspection SimplifiableIfStatement        if(id == R.id.action_sort2)        {            for(int i=1;i<sups.size();i++)            {                for(int j=0;j<i;j++)                {                    if(sups.get(j).getLv()<sups.get(i).getLv())                    {                        swapPKMN(i,j);                    }                }            }            supadapter.notifyDataSetChanged();        }        return super.onOptionsItemSelected(item);    }    @Override    public void onBackPressed() {        supDataSource.close();        super.onBackPressed();    }    private String formatname(String name)    {        String nameL = name.toLowerCase();        String ret = "";        for(int i=0;i<name.length();i++)        {            if(nameL.charAt(i)>=97&&nameL.charAt(i)<=122)            {                ret+=nameL.charAt(i);            }        }        return ret;    }    @Override    protected void onActivityResult(int requestCode, int resultCode, Intent data) {        super.onActivityResult(requestCode, resultCode, data);        if(requestCode==REQ_CODE)        {            if(resultCode==RESULT_OK)            {                int taps = data.getIntExtra("taps",0);                if(taps>=lvup*2)                {                    Sup.setLv(Sup.getLv()+1);                    supDataSource.updateSUP(Sup);                    supadapter.notifyDataSetChanged();                    new Utilities().updatescore(this);                    Toast.makeText(this,Sup.getName()+" has levelled up",Toast.LENGTH_SHORT).show();                }                else                {                    Toast.makeText(this,"Needed "+(2*lvup)+" taps. Achieved "+taps,Toast.LENGTH_SHORT).show();                }            }        }    }    private void swapPKMN(int i,int j)    {        SUP pkmni = sups.get(i);        SUP pkmnj = sups.get(j);        sups.set(i,pkmnj);        sups.set(j,pkmni);    }}