package ecellapp.sam10795.com.startuppo;import android.content.Context;import android.content.res.Resources;import android.graphics.Bitmap;import android.graphics.BitmapFactory;import android.graphics.Canvas;import android.graphics.Paint;import android.util.Log;import android.view.View;/** * Created by SAM10795 on 04-09-2015. */public class Throdraw extends View{    double ix,iy;    double accel;    double ymax;    double velx;    double vely;    int a = 255;    int i=0;    int drawable = 0;    public Throdraw(Context context,int drawable,double x,double y, double velx, double vely, double accel, double ymax)    {        super(context);        ix = x;        iy = y;        this.ymax = ymax;        this.velx = velx;        this.vely = vely;        this.accel = accel;        this.drawable = drawable;    }    Resources res = getContext().getResources();    long st = System.currentTimeMillis();    Paint p = new Paint();    @Override    protected void onDraw(Canvas canvas) {        super.onDraw(canvas);        if(System.currentTimeMillis()-st<1500)        {            long et = System.currentTimeMillis()-st;            float density = getResources().getDisplayMetrics().density;            if(System.currentTimeMillis()-st>1000)            {                et = 1000;                int scale = (int)density*100-(int)(0.01*et*density*(vely/500));                Log.i("Scale",""+scale);                Bitmap bitmap = Bitmap.createScaledBitmap(BitmapFactory.decodeResource(res,drawable),scale,scale,false);                canvas.drawBitmap(bitmap, getx(et), gety(et)+5, null);                Log.i("CatchDraw",getx(et)+","+gety(et)+";"+ymax+","+accel+","+velx+","+vely);            }            else            {                int scale = (int)density*100-(int)(0.01*et*density*(vely/500));                Log.i("Scale",""+scale);                Bitmap bitmap = Bitmap.createScaledBitmap(BitmapFactory.decodeResource(res,drawable),scale,scale,false);                canvas.drawBitmap(bitmap, getx(et), gety(et), null);                Log.i("CatchDraw",getx(et)+","+gety(et)+";"+ymax+","+accel+","+velx+","+vely);            }            invalidate();        }        else        {            if(a<0) {                p.setAlpha(0);            }            else            {                p.setAlpha(a);            }            canvas.drawBitmap(BitmapFactory.decodeResource(res,drawable),getx(1000),gety(1000)+5,p);            a--;        }    }    float getx(long t)    {        return (float)(ix+((velx*t)/1000.0));    }    float gety(long t)    {        return (float)(ymax-(iy+((vely*Math.sin(Math.PI/3)*t)/1000.0)-((0.5*accel*t*t)/1000000.0)));    }}