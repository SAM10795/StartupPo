package ecellapp.sam10795.com.startuppo;import android.content.Intent;import android.content.SharedPreferences;import android.media.MediaPlayer;import android.os.CountDownTimer;import android.os.Handler;import android.support.v7.app.AppCompatActivity;import android.os.Bundle;import android.util.DisplayMetrics;import android.util.Log;import android.view.View;import android.view.ViewGroup;import android.widget.Button;import android.widget.ImageView;import android.widget.TextView;import android.widget.Toast;import com.google.firebase.database.DatabaseReference;import com.google.firebase.database.FirebaseDatabase;import com.opencsv.CSVReader;import ecellapp.sam10795.com.startuppo.R;import java.io.BufferedReader;import java.io.IOException;import java.io.InputStream;import java.io.InputStreamReader;import java.util.HashMap;import java.util.List;import java.util.Random;import pl.droidsonroids.gif.GifDrawable;public class LVTap extends AppCompatActivity {    Handler handler;    ImageView pkview;    boolean battle;    int count;    Button start;    TextView score,timer;    long delay = 1000;    Random random;    int w,h,level;    String tower,pokemon,optower;    CountDownTimer countDownTimer;    ViewGroup.MarginLayoutParams layoutParams;    MediaPlayer mediaPlayer;    List<String[]> records;    Utilities utilities;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_lvtap);        utilities = new Utilities();        random = new Random();        random.setSeed(5132);        pkview = (ImageView)findViewById(R.id.pkview);        DisplayMetrics displayMetrics = getResources().getDisplayMetrics();        h = (displayMetrics.heightPixels);        w = (displayMetrics.widthPixels);        int left = random.nextInt(w-75);        int top = random.nextInt(h-75);        top = top>720?720:top;        left = left>590?590:left;        layoutParams = (ViewGroup.MarginLayoutParams)pkview.getLayoutParams();        layoutParams.setMargins(left,top,0,0);        pkview.setLayoutParams(layoutParams);        Intent intent = getIntent();        if(intent.hasExtra("Pokemon")&&intent.hasExtra("Level"))        {            records = utilities.getRecords(this);            battle = intent.hasExtra("Battle");            pokemon = intent.getStringExtra("Pokemon");            level = intent.getIntExtra("Level",200);            count = level<40?(2*level+1):(2*level+10);            delay = (level*1000)+500+(level%10)*500;            handler = new Handler();            pkview.setImageResource(getResources().getIdentifier(utilities.formatname(pokemon.toLowerCase()),"drawable",getPackageName()));            if(battle)            {                String opponent = intent.getStringExtra("Opponent");                int opponentlv = intent.getIntExtra("OppLv",0);                optower = intent.getStringExtra("OppTow");                tower = intent.getStringExtra("Tower");                if(opponentlv<=0)                {                    updatetower(tower,pokemon);                    Intent intent1 = new Intent(LVTap.this, Mainu.class);                    intent1.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);                    startActivity(intent1);                    finish();                }                delay = getdelay(level,pokemon);                count = getcount(opponentlv,opponent,pokemon,level);                pkview.setImageResource(getResources().getIdentifier(utilities.formatname(opponent.toLowerCase()),"drawable",getPackageName()));            }            pkview.setOnClickListener(new View.OnClickListener() {                @Override                public void onClick(View v) {                    count--;                    score.setText(String.valueOf(count));                    if(count<=0)                    {                        pkview.setVisibility(View.GONE);                        if(!battle) {                            mediaPlayer.stop();                            Toast.makeText(LVTap.this, "Level UP completed", Toast.LENGTH_SHORT).show();                            Intent intent = new Intent(LVTap.this, mypkmn.class);                            intent.putExtra("taps", 2 * level + 1 - count);                            setResult(RESULT_OK, intent);                            finish();                        }                        else                        {                            Log.i("Win","Tower");                            mediaPlayer.stop();                            updatetower(tower,pokemon);                            Toast.makeText(LVTap.this,"Congratulations, You won!",Toast.LENGTH_SHORT).show();                            Intent intent1 = new Intent(LVTap.this, Mainu.class);                            intent1.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);                            startActivity(intent1);                            finish();                        }                    }                    int left = random.nextInt(w-75);                    int top = random.nextInt(h-75);                    top = top>720?720:top;                    left = left>590?590:left;                    layoutParams = (ViewGroup.MarginLayoutParams)pkview.getLayoutParams();                    layoutParams.setMargins(left,top,0,0);                    pkview.setLayoutParams(layoutParams);                    Log.i("View",""+left+","+top);                }            });            pkview.setVisibility(View.GONE);            start = (Button)findViewById(R.id.start);            score = (TextView)findViewById(R.id.score);            timer = (TextView)findViewById(R.id.timer);            timer.setText("0");            countDownTimer = new CountDownTimer(delay,100) {                @Override                public void onTick(long millisUntilFinished) {                    timer.setText(String.valueOf(millisUntilFinished/100));                }                @Override                public void onFinish() {                    timer.setText("0");                    pkview.setVisibility(View.GONE);                    countDownTimer.cancel();                    if(!battle) {                        mediaPlayer.stop();                        Intent intent = new Intent(LVTap.this, mypkmn.class);                        intent.putExtra("taps", 2 * level + 1 - count);                        setResult(RESULT_OK, intent);                        finish();                    }                    else                    {                        mediaPlayer.stop();                        Toast.makeText(LVTap.this,"Sorry, you lost!",Toast.LENGTH_SHORT).show();                        Intent intent1 = new Intent(LVTap.this, Mainu.class);                        intent1.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);                        startActivity(intent1);                        finish();                    }                }            };            start.setOnClickListener(new View.OnClickListener() {                @Override                public void onClick(View v) {                    pkview.setVisibility(View.VISIBLE);                    start.setVisibility(View.GONE);                    score.setText(String.valueOf(count));                    countDownTimer.start();                }            });        }        else        {            Toast.makeText(this,"Error finding resource",Toast.LENGTH_SHORT).show();            finish();        }    }    @Override    public void onBackPressed() {        mediaPlayer.stop();        finish();        super.onBackPressed();    }    private int getdelay(int mylv, String name)    {        return (1000 + 1000*(mylv) + 500*utilities.islegend(name,records));    }    private int getcount(int oplv, String opp, String name, int mylv)    {        oplv = 15;//TODO: delete        int count = 5+(2*oplv + (oplv*utilities.islegend(opp,records))/2);        int vop = utilities.getvaluation(opp,records);        int vmy = utilities.getvaluation(name,records);        if(vop<vmy)        {            count-=((5*vop)/vmy);        }        else        {            count+=((5*vmy)/vop);        }        return count>5?count:5;    }    private void clearcaps(String tower)    {        DatabaseReference towerdata = FirebaseDatabase.getInstance().getReference(getResources().getString(R.string.Towers)).child(tower);        towerdata.child("capUser").setValue("");        towerdata.child("capHostel").setValue("");        towerdata.child("capSUP").setValue("");        towerdata.child("suplv").setValue(-1);        towerdata.child("userscore").setValue(0);    }    private void updatetower(String tower, String Sup)    {        Log.i("Update","Tower");        String captower = getSharedPreferences("PKDT",MODE_PRIVATE).getString("CapHostel","");        if(captower.length()>2) {            clearcaps(captower);        }        User user = utilities.getUser(this);        user.setWins(user.getWins()+1);        DatabaseReference towerdata = FirebaseDatabase.getInstance().getReference(getResources().getString(R.string.Towers)).child(tower);        towerdata.child("capUser").setValue(user.getName());        towerdata.child("capHostel").setValue(user.getHostel());        towerdata.child("capSUP").setValue(Sup);        towerdata.child("suplv").setValue(level);        towerdata.child("userscore").setValue(user.getScore());        utilities.setUser(user,this);        utilities.updatescore(this);        getSharedPreferences("PKDT",MODE_PRIVATE).edit().putString("CapHostel",tower).commit();        Log.i("Tower","Updated");    }    @Override    protected void onPause() {        super.onPause();        mediaPlayer.stop();    }    @Override    protected void onResume() {        super.onResume();    }    @Override    protected void onStart() {        super.onStart();        mediaPlayer = MediaPlayer.create(this,R.raw.battle);        mediaPlayer.start();        mediaPlayer.setLooping(true);    }}